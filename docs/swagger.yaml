definitions:
  main.ErrorJSON:
    properties:
      error:
        type: string
    type: object
  main.SuccessJSON:
    properties:
      message:
        type: string
    type: object
  main.Todo:
    properties:
      category:
        type: string
      completed:
        type: boolean
      completedAt:
        type: string
      dueDate:
        type: string
      id:
        type: integer
      priority:
        type: string
      title:
        type: string
      user_id:
        type: integer
    required:
    - category
    - completed
    - priority
    - title
    type: object
  main.TodoDTO:
    properties:
      completed:
        type: boolean
    required:
    - completed
    type: object
host: localhost:8080
info:
  contact:
    email: nadaserag2006@gmail.com
    name: Nada Serag
  description: |-
    API documentation of my RESTful API - Todo App that allows clients to manage tasks (todos) through standard HTTP methods.
    Each todo is treated as a resource, identified by a unique ID, and manipulated using predictable endpoints.
    Authentication is handled via **JWT tokens**.

    To access protected endpoints, a valid token must be included in the `Authorization` header: `Authorization: Bearer <your_token>`
  title: TODO-App API Documentation w/ Swagger
  version: "1.0"
paths:
  /category/{category}:
    get:
      description: Returns a single todo by its category
      parameters:
      - description: 'Category to search for: '
        in: path
        name: category
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
        "404":
          description: Category Invalid
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      summary: Get a todo by category
      tags:
      - Todos
  /status/{status}:
    get:
      description: Returns a single todo by its status
      parameters:
      - description: 'Status to search for: '
        in: path
        name: status
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
        "404":
          description: No todos with the status
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      summary: Get a todo by status
      tags:
      - Todos
  /todos:
    delete:
      description: Deleting ALL todos in the entire database - this action is only
        permissible for an Admin.
      responses:
        "201":
          description: All todos deleted
          schema:
            $ref: '#/definitions/main.SuccessJSON'
        "400":
          description: Invalid Token
          schema:
            $ref: '#/definitions/main.ErrorJSON'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      security:
      - BearerAuth: []
      summary: Delete ALL todos
      tags:
      - Todos
    get:
      description: Returns a list of all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
      summary: List all todos
      tags:
      - Todos
    post:
      consumes:
      - application/json
      description: Adding/Creating new todo to out table "todos"
      parameters:
      - description: Todo to create
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Invalid json, or missing fields, or invalid priority/category
            or past due date
          schema:
            $ref: '#/definitions/main.ErrorJSON'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      security:
      - BearerAuth: []
      summary: Add todo
      tags:
      - Todos
  /todos/{id}:
    delete:
      description: Deleting a todo by its id
      parameters:
      - description: Todo ID to delete
        in: path
        name: id
        required: true
        type: integer
      responses:
        "201":
          description: Todo deleted successfully
          schema:
            $ref: '#/definitions/main.SuccessJSON'
        "400":
          description: No todo exists with the ID entered
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      summary: Delete a todo
      tags:
      - Todos
    get:
      description: Returns a single todo by its ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      summary: Get a todo by ID
      tags:
      - Todos
    put:
      consumes:
      - application/json
      description: Editing a todo by entering its id, and the request includes the
        updated data
      parameters:
      - description: Updates
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Invalid json, or missing fields, or invalid priority/category
            or past due date
          schema:
            $ref: '#/definitions/main.ErrorJSON'
        "401":
          description: Invalid Token
          schema:
            $ref: '#/definitions/main.ErrorJSON'
        "403":
          description: Unauthorized (Forbidden for that person to do that action)
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      summary: Edit a todo
      tags:
      - Todos
  /todos/category/{category}}:
    put:
      consumes:
      - application/json
      description: Editing multiple todos of the same category to update their state
        of completion
      parameters:
      - description: Updates
        in: body
        name: completion_status
        required: true
        schema:
          $ref: '#/definitions/main.TodoDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Invalid json
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      summary: Edit todos
      tags:
      - Todos
  /todos/search/:
    get:
      description: Returns todos that have name-match with the search string entered
      parameters:
      - description: 'search string: '
        in: query
        name: q
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
        "404":
          description: No todos match search
          schema:
            $ref: '#/definitions/main.ErrorJSON'
      summary: Search Todos by title
      tags:
      - Todos
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
