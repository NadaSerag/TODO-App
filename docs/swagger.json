{
    "swagger": "2.0",
    "info": {
        "description": "API documentation of my RESTful API - Todo App that allows clients to manage tasks (todos) through standard HTTP methods.\nEach todo is treated as a resource, identified by a unique ID, and manipulated using predictable endpoints.\nAuthentication is handled via **JWT tokens**.\n\nTo access protected endpoints, a valid token must be included in the `Authorization` header: `Authorization: Bearer \u003cyour_token\u003e`",
        "title": "TODO-App API Documentation w/ Swagger",
        "contact": {
            "name": "Nada Serag",
            "email": "nadaserag2006@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/category/{category}": {
            "get": {
                "description": "Returns a single todo by its category",
                "tags": [
                    "Todos"
                ],
                "summary": "Get a todo by category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category to search for: ",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Todo"
                            }
                        }
                    },
                    "404": {
                        "description": "Category Invalid",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            }
        },
        "/status/{status}": {
            "get": {
                "description": "Returns a single todo by its status",
                "tags": [
                    "Todos"
                ],
                "summary": "Get a todo by status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status to search for: ",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Todo"
                            }
                        }
                    },
                    "404": {
                        "description": "No todos with the status",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "description": "Returns a list of all todos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "summary": "List all todos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Todo"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adding/Creating new todo to out table \"todos\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "summary": "Add todo",
                "parameters": [
                    {
                        "description": "Todo to create",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Todo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Todo"
                        }
                    },
                    "400": {
                        "description": "Invalid json, or missing fields, or invalid priority/category or past due date",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deleting ALL todos in the entire database - this action is only permissible for an Admin.",
                "tags": [
                    "Todos"
                ],
                "summary": "Delete ALL todos",
                "responses": {
                    "201": {
                        "description": "All todos deleted",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessJSON"
                        }
                    },
                    "400": {
                        "description": "Invalid Token",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            }
        },
        "/todos/category/{category}}": {
            "put": {
                "description": "Editing multiple todos of the same category to update their state of completion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "summary": "Edit todos",
                "parameters": [
                    {
                        "description": "Updates",
                        "name": "completion_status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.TodoDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Todo"
                        }
                    },
                    "400": {
                        "description": "Invalid json",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            }
        },
        "/todos/search/": {
            "get": {
                "description": "Returns todos that have name-match with the search string entered",
                "tags": [
                    "Todos"
                ],
                "summary": "Search Todos by title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string: ",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Todo"
                            }
                        }
                    },
                    "404": {
                        "description": "No todos match search",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            }
        },
        "/todos/{id}": {
            "get": {
                "description": "Returns a single todo by its ID",
                "tags": [
                    "Todos"
                ],
                "summary": "Get a todo by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Todo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            },
            "put": {
                "description": "Editing a todo by entering its id, and the request includes the updated data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Todos"
                ],
                "summary": "Edit a todo",
                "parameters": [
                    {
                        "description": "Updates",
                        "name": "todo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Todo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Todo"
                        }
                    },
                    "400": {
                        "description": "Invalid json, or missing fields, or invalid priority/category or past due date",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    },
                    "401": {
                        "description": "Invalid Token",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    },
                    "403": {
                        "description": "Unauthorized (Forbidden for that person to do that action)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleting a todo by its id",
                "tags": [
                    "Todos"
                ],
                "summary": "Delete a todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Todo ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Todo deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessJSON"
                        }
                    },
                    "400": {
                        "description": "No todo exists with the ID entered",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorJSON"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ErrorJSON": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.SuccessJSON": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "main.Todo": {
            "type": "object",
            "required": [
                "category",
                "completed",
                "priority",
                "title"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "completed": {
                    "type": "boolean"
                },
                "completedAt": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "main.TodoDTO": {
            "type": "object",
            "required": [
                "completed"
            ],
            "properties": {
                "completed": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}